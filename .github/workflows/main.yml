name: Build

defaults:
  run:
    shell: bash

on: push

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository and the juce submodule recursively
    - uses: actions/checkout@v2
      with:
        submodules: recursive

      # perform the build
    - uses: Barabas5532/juce-linux-build-action@v5

      # save the artifacts
    - uses: actions/upload-artifact@v2
      with:
        name: linux-artifacts
        path: |
          build/*_artefacts
          !build/*_artefacts/JuceLibraryCode

  build-windows:
    runs-on: windows-latest
    steps:
      # Checkout the repository and the juce submodule recursively
    - uses: actions/checkout@v2
      with:
        submodules: recursive

      # perform the build
    - uses: Barabas5532/juce-windows-build-action@v3

      # save the artifacts
    - uses: actions/upload-artifact@v2
      with:
        name: windows-artifacts
        path: |
          build/*_artefacts
          !build/*_artefacts/JuceLibraryCode

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    permissions:
      contents: write
    steps:
      # Checkout the repository and the juce submodule recursively
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Print working directory
      run: pwd

    - uses: actions/download-artifact@v2
      with:
        path: ~/artifacts

    - name: Display structure of downloaded files
      run: ls -R ~/artifacts

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Package for Linux
      id: package_linux
      run: |
        ./.github/package-linux.sh ~/artifacts/linux-artifacts/*_artefacts/Release $OUTPUT_NAME
        echo ::set-output name=name::$OUTPUT_NAME
      env:
        OUTPUT_NAME: ${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}-linux

    - name: Zip Linux
      uses: montudor/action-zip@v1
      with:
        args: zip -qq -r ${{ steps.package_linux.name }}.zip ${{ steps.package_linux.name }}

    - name: Package for Windows
      id: package_windows
      run: |
        ./.github/package-windows.sh ~/artifacts/windows-artifacts/*_artefacts/Release $OUTPUT_NAME
        echo ::set-output name=name::$OUTPUT_NAME
      env:
        OUTPUT_NAME: ${{ github.event.repository.name }}-${{ steps.get_version.outputs.VERSION }}-windows

    - name: Zip Windows
      uses: montudor/action-zip@v1
      with:
        args: zip -qq -r ${{ steps.package_windows.name }}.zip ${{ steps.package_windows.name }}

    # TODO rearrange files in artifacts so they make more sense for users
    #      Each format could be its own upload, and we should get rid of extra
    #      files.
    #
    #      Need to reset the executable bit on linux files, or tar them before
    #      artifact upload. (artifact upload does not preserve permissions)

    # Create the release, including the artifacts in it
    - uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ steps.package_linux.name }}.zip
          ${{ steps.package_windows.name }}.zip
    if: startsWith(github.ref, 'refs/tags/v')
